Connection	matching	Soot(1)	OSA(2)	SPOON(4)	JCG(8)	WALA(16)	JDT(64)	IntersectionID
(0)dynamic.DynamicTest.reflection()->(2)java.lang.Class.forName(java.lang.String)	6	X	X	X	X	X	X	95
(0)dynamic.DynamicTest.reflection()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(0)dynamic.DynamicTest.reflection()->(76)java.lang.Class.getMethod(java.lang.String,java.lang.Class[])	6	X	X	X	X	X	X	95
(0)dynamic.DynamicTest.reflection()->(78)java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])	6	X	X	X	X	X	X	95
(0)dynamic.DynamicTest.reflection()->(79)java.io.PrintStream.println(java.lang.String)	6	X	X	X	X	X	X	95
(0)dynamic.DynamicTest.reflection()->(153)java.lang.reflect.Method.setAccessible(boolean)	1				X			8
(3)helper.Debug.debug(java.lang.String)->(79)java.io.PrintStream.println(java.lang.String)	6	X	X	X	X	X	X	95
(7)dynamic.DynamicTest.methodHandle()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(7)dynamic.DynamicTest.methodHandle()->(8)java.lang.invoke.MethodHandles.lookup()	6	X	X	X	X	X	X	95
(7)dynamic.DynamicTest.methodHandle()->(9)java.lang.invoke.MethodType.methodType(java.lang.Class,java.lang.Class)	6	X	X	X	X	X	X	95
(7)dynamic.DynamicTest.methodHandle()->(79)java.io.PrintStream.println(java.lang.String)	6	X	X	X	X	X	X	95
(7)dynamic.DynamicTest.methodHandle()->(80)java.lang.invoke.MethodHandles$Lookup.findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)	6	X	X	X	X	X	X	95
(7)dynamic.DynamicTest.methodHandle()->(81)java.lang.invoke.MethodHandle.invokeWithArguments(java.lang.Object[])	5	X	X	X	X		X	79
(7)dynamic.DynamicTest.methodHandle()->(82)java.lang.Throwable.printStackTrace()	6	X	X	X	X	X	X	95
(12)java8.Java8Test.lambda()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(12)java8.Java8Test.lambda()->(150)java8.Lambda.compare(int,int)	4		X	X	X		X	78
(12)java8.Java8Test.lambda()->(154)java8.Lambda.compare()	1				X			8
(12)java8.Java8Test.lambda()->(163)java.lang.Object.compare()	1				X			8
(13)java8.Java8Test.methodReference()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(13)java8.Java8Test.methodReference()->(22)java8.MethodReference.<init>()	6	X	X	X	X	X	X	95
(13)java8.Java8Test.methodReference()->(84)java8.MethodReference.doSomething()	6	X	X	X	X	X	X	95
(14)java8.Java8Test.functionalInterface()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(14)java8.Java8Test.functionalInterface()->(149)java8.FunctionalInterface.doSomething(java.lang.String)	4		X	X	X		X	78
(14)java8.Java8Test.functionalInterface()->(155)java8.FunctionalInterface.doSomething()	1				X			8
(14)java8.Java8Test.functionalInterface()->(164)java.lang.Object.doSomething()	1				X			8
(15)java8.Java8Test.functionalInterface2()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(15)java8.Java8Test.functionalInterface2()->(149)java8.FunctionalInterface.doSomething(java.lang.String)	4		X	X	X		X	78
(15)java8.Java8Test.functionalInterface2()->(155)java8.FunctionalInterface.doSomething()	1				X			8
(15)java8.Java8Test.functionalInterface2()->(164)java.lang.Object.doSomething()	1				X			8
(16)java8.Java8Test.test()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(16)java8.Java8Test.test()->(12)java8.Java8Test.lambda()	6	X	X	X	X	X	X	95
(16)java8.Java8Test.test()->(13)java8.Java8Test.methodReference()	6	X	X	X	X	X	X	95
(16)java8.Java8Test.test()->(14)java8.Java8Test.functionalInterface()	6	X	X	X	X	X	X	95
(16)java8.Java8Test.test()->(15)java8.Java8Test.functionalInterface2()	6	X	X	X	X	X	X	95
(17)java8.Java8Test.lambda$0(int,int)->(3)helper.Debug.debug(java.lang.String)	2	X			X			9
(18)java8.Java8Test.lambda$3(java.lang.String)->(79)java.io.PrintStream.println(java.lang.String)	3	X			X	X		25
(18)java8.Java8Test.lambda$3(java.lang.String)->(86)helper.Child1.<init>()	3	X			X	X		25
(18)java8.Java8Test.lambda$3(java.lang.String)->(87)java.lang.String.<init>(java.lang.String)	3	X			X	X		25
(18)java8.Java8Test.lambda$3(java.lang.String)->(88)java.lang.String.toLowerCase()	3	X			X	X		25
(20)java8.MethodReference.print(java.lang.String)->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(21)java8.MethodReference.privatePrint()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(22)java8.MethodReference.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(22)java8.MethodReference.<init>()->(89)java.util.ArrayList.<init>()	4	X		X	X	X		29
(22)java8.MethodReference.<init>()->(151)java.util.List.add(java.lang.Object)	4		X	X	X		X	78
(24)generics.GenericsTest.genericMethod(helper.Interface)->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(24)generics.GenericsTest.genericMethod(helper.Interface)->(147)helper.Interface.foo()	4		X	X	X		X	78
(25)generics.GenericsTest.test()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(25)generics.GenericsTest.test()->(24)generics.GenericsTest.genericMethod(helper.Interface)	5	X	X	X	X	X		31
(25)generics.GenericsTest.test()->(26)generics.Generic1.generic(helper.Interface)	5	X	X	X	X	X		31
(25)generics.GenericsTest.test()->(27)generics.Generic2.generic(helper.Interface,generics.Generic1)	5	X	X	X	X	X		31
(25)generics.GenericsTest.test()->(28)generics.Generic3.foo()	6	X	X	X	X	X	X	95
(25)generics.GenericsTest.test()->(86)helper.Child1.<init>()	6	X	X	X	X	X	X	95
(25)generics.GenericsTest.test()->(116)generics.Generic1.<init>()	6	X	X	X	X	X	X	95
(25)generics.GenericsTest.test()->(118)helper.Child2.<init>()	6	X	X	X	X	X	X	95
(25)generics.GenericsTest.test()->(119)generics.Generic2.<init>()	6	X	X	X	X	X	X	95
(25)generics.GenericsTest.test()->(120)generics.Generic3.<init>()	6	X	X	X	X	X	X	95
(26)generics.Generic1.generic(helper.Interface)->(3)helper.Debug.debug(java.lang.String)	5	X	X	X	X	X		31
(26)generics.Generic1.generic(helper.Interface)->(147)helper.Interface.foo()	3		X	X	X			14
(27)generics.Generic2.generic(helper.Interface,generics.Generic1)->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(27)generics.Generic2.generic(helper.Interface,generics.Generic1)->(26)generics.Generic1.generic(helper.Interface)	6	X	X	X	X	X	X	95
(27)generics.Generic2.generic(helper.Interface,generics.Generic1)->(147)helper.Interface.foo()	4		X	X	X		X	78
(28)generics.Generic3.foo()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(28)generics.Generic3.foo()->(86)helper.Child1.<init>()	6	X	X	X	X	X	X	95
(28)generics.Generic3.foo()->(158)generics.Generic3.generic(helper.Interface)	1				X			8
(29)parser.ParserTest.test()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(29)parser.ParserTest.test()->(27)generics.Generic2.generic(helper.Interface,generics.Generic1)	5	X	X	X	X	X		31
(29)parser.ParserTest.test()->(30)parser.ForParser.foo()	6	X	X	X	X	X	X	95
(29)parser.ParserTest.test()->(31)parser.ForParser.goo()	6	X	X	X	X	X	X	95
(29)parser.ParserTest.test()->(32)parser.ForParser.validMethod(helper.Child2,generics.Generic1,java.lang.Class[])	6	X	X	X	X	X	X	95
(29)parser.ParserTest.test()->(33)parser.ForParser.validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[])	6	X	X	X	X	X	X	95
(29)parser.ParserTest.test()->(116)generics.Generic1.<init>()	6	X	X	X	X	X	X	95
(29)parser.ParserTest.test()->(118)helper.Child2.<init>()	6	X	X	X	X	X	X	95
(29)parser.ParserTest.test()->(122)parser.ForParser.<init>()	6	X	X	X	X	X	X	95
(30)parser.ForParser.foo()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(31)parser.ForParser.goo()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(32)parser.ForParser.validMethod(helper.Child2,generics.Generic1,java.lang.Class[])->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(32)parser.ForParser.validMethod(helper.Child2,generics.Generic1,java.lang.Class[])->(27)generics.Generic2.generic(helper.Interface,generics.Generic1)	5	X	X	X	X	X		31
(32)parser.ForParser.validMethod(helper.Child2,generics.Generic1,java.lang.Class[])->(119)generics.Generic2.<init>()	6	X	X	X	X	X	X	95
(33)parser.ForParser.validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[])->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(33)parser.ForParser.validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[])->(27)generics.Generic2.generic(helper.Interface,generics.Generic1)	5	X	X	X	X	X		31
(33)parser.ForParser.validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[])->(116)generics.Generic1.<init>()	6	X	X	X	X	X	X	95
(33)parser.ForParser.validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[])->(119)generics.Generic2.<init>()	6	X	X	X	X	X	X	95
(34)anonymAndInner.Outer.inner()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(34)anonymAndInner.Outer.inner()->(38)anonymAndInner.Outer$Inner.inner()	6	X	X	X	X	X	X	95
(34)anonymAndInner.Outer.inner()->(125)anonymAndInner.Outer$Inner.<init>(anonymAndInner.Outer)	3	X			X	X		25
(35)anonymAndInner.AnonymAndInnerTest$1.foo()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(36)anonymAndInner.Outer$Nested.staticNested()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(37)anonymAndInner.Outer$Nested.nested()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(38)anonymAndInner.Outer$Inner.inner()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(39)anonymAndInner.AnonymAndInnerTest.innerClass()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(39)anonymAndInner.AnonymAndInnerTest.innerClass()->(34)anonymAndInner.Outer.inner()	6	X	X	X	X	X	X	95
(39)anonymAndInner.AnonymAndInnerTest.innerClass()->(124)anonymAndInner.Outer.<init>()	6	X	X	X	X	X	X	95
(40)anonymAndInner.AnonymAndInnerTest.anonim()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(40)anonymAndInner.AnonymAndInnerTest.anonim()->(26)generics.Generic1.generic(helper.Interface)	3		X	X	X			14
(40)anonymAndInner.AnonymAndInnerTest.anonim()->(48)helper.Child1.goo()	6	X	X	X	X	X	X	95
(40)anonymAndInner.AnonymAndInnerTest.anonim()->(49)helper.Child1.foo()	4		X	X	X		X	78
(40)anonymAndInner.AnonymAndInnerTest.anonim()->(126)anonymAndInner.AnonymAndInnerTest$1.<init>(anonymAndInner.AnonymAndInnerTest)	3	X			X	X		25
(40)anonymAndInner.AnonymAndInnerTest.anonim()->(159)anonymAndInner.AnonymAndInnerTest$2.<init>(anonymAndInner.AnonymAndInnerTest)	1				X			8
(41)anonymAndInner.AnonymAndInnerTest.nested()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(41)anonymAndInner.AnonymAndInnerTest.nested()->(36)anonymAndInner.Outer$Nested.staticNested()	6	X	X	X	X	X	X	95
(41)anonymAndInner.AnonymAndInnerTest.nested()->(37)anonymAndInner.Outer$Nested.nested()	6	X	X	X	X	X	X	95
(41)anonymAndInner.AnonymAndInnerTest.nested()->(127)anonymAndInner.Outer$Nested.<init>()	6	X	X	X	X	X	X	95
(42)anonymAndInner.AnonymAndInnerTest$2.generic(helper.Child1)->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(42)anonymAndInner.AnonymAndInnerTest$2.generic(helper.Child1)->(49)helper.Child1.foo()	6	X	X	X	X	X	X	95
(43)helper.Child2.goo()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(44)helper.Child2.hoo()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(45)helper.Interface.hoo()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(46)helper.Child3.hoo()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(47)helper.Abstract.foo()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(48)helper.Child1.goo()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(49)helper.Child1.foo()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(50)helper.Child1.child1()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(51)helper.Base.base()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(52)polimorph.Overload.foo()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(53)polimorph.Overload.foo(int)->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(54)polimorph.Overload.foo(java.lang.Object)->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(55)polimorph.Overload.foo(int,java.lang.Object[])->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(56)polimorph.Overload.overload1()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(56)polimorph.Overload.overload1()->(52)polimorph.Overload.foo()	6	X	X	X	X	X	X	95
(57)polimorph.Overload.overload2()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(57)polimorph.Overload.overload2()->(53)polimorph.Overload.foo(int)	6	X	X	X	X	X	X	95
(58)polimorph.Overload.overload3()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(58)polimorph.Overload.overload3()->(54)polimorph.Overload.foo(java.lang.Object)	6	X	X	X	X	X	X	95
(59)polimorph.Overload.overload4()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(59)polimorph.Overload.overload4()->(55)polimorph.Overload.foo(int,java.lang.Object[])	6	X	X	X	X	X	X	95
(60)polimorph.PolimorphTest.overload()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(60)polimorph.PolimorphTest.overload()->(56)polimorph.Overload.overload1()	6	X	X	X	X	X	X	95
(60)polimorph.PolimorphTest.overload()->(57)polimorph.Overload.overload2()	6	X	X	X	X	X	X	95
(60)polimorph.PolimorphTest.overload()->(58)polimorph.Overload.overload3()	6	X	X	X	X	X	X	95
(60)polimorph.PolimorphTest.overload()->(59)polimorph.Overload.overload4()	6	X	X	X	X	X	X	95
(60)polimorph.PolimorphTest.overload()->(133)polimorph.Overload.<init>()	6	X	X	X	X	X	X	95
(61)polimorph.PolimorphTest.polimorphic()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(61)polimorph.PolimorphTest.polimorphic()->(63)polimorph.Polimorph.overloadedInterface(helper.Interface)	6	X	X	X	X	X	X	95
(61)polimorph.PolimorphTest.polimorphic()->(130)helper.Child3.<init>()	6	X	X	X	X	X	X	95
(61)polimorph.PolimorphTest.polimorphic()->(134)polimorph.Polimorph.<init>()	6	X	X	X	X	X	X	95
(61)polimorph.PolimorphTest.polimorphic()->(135)polimorph.Polimorph.interfaceImplementation()	6	X	X	X	X	X	X	95
(61)polimorph.PolimorphTest.polimorphic()->(136)polimorph.Polimorph.interfaceImplementation2()	6	X	X	X	X	X	X	95
(61)polimorph.PolimorphTest.polimorphic()->(137)polimorph.Polimorph.abstractClassImplementation()	6	X	X	X	X	X	X	95
(62)polimorph.PolimorphTest.test()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(62)polimorph.PolimorphTest.test()->(60)polimorph.PolimorphTest.overload()	6	X	X	X	X	X	X	95
(62)polimorph.PolimorphTest.test()->(61)polimorph.PolimorphTest.polimorphic()	6	X	X	X	X	X	X	95
(63)polimorph.Polimorph.overloadedInterface(helper.Interface)->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(63)polimorph.Polimorph.overloadedInterface(helper.Interface)->(45)helper.Interface.hoo()	5	X	X	X	X		X	79
(63)polimorph.Polimorph.overloadedInterface(helper.Interface)->(147)helper.Interface.foo()	4		X	X	X		X	78
(63)polimorph.Polimorph.overloadedInterface(helper.Interface)->(148)helper.Interface.goo()	4		X	X	X		X	78
(64)polimorph.Polimorph.overloadedInterface()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(64)polimorph.Polimorph.overloadedInterface()->(46)helper.Child3.hoo()	6	X	X	X	X	X	X	95
(64)polimorph.Polimorph.overloadedInterface()->(130)helper.Child3.<init>()	6	X	X	X	X	X	X	95
(64)polimorph.Polimorph.overloadedInterface()->(160)helper.Child3.foo()	1				X			8
(64)polimorph.Polimorph.overloadedInterface()->(161)helper.Child3.goo()	1				X			8
(65)polimorph.Polimorph.overloadedInterface2()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(65)polimorph.Polimorph.overloadedInterface2()->(43)helper.Child2.goo()	6	X	X	X	X	X	X	95
(65)polimorph.Polimorph.overloadedInterface2()->(44)helper.Child2.hoo()	6	X	X	X	X	X	X	95
(65)polimorph.Polimorph.overloadedInterface2()->(118)helper.Child2.<init>()	6	X	X	X	X	X	X	95
(65)polimorph.Polimorph.overloadedInterface2()->(162)helper.Child2.foo()	1				X			8
(66)initialization.StaticInit.<clinit>()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(66)initialization.StaticInit.<clinit>()->(68)initialization.IntermediateInitialization.instantiateChild1()	6	X	X	X	X	X	X	95
(66)initialization.StaticInit.<clinit>()->(118)helper.Child2.<init>()	6	X	X	X	X	X	X	95
(66)initialization.StaticInit.<clinit>()->(139)initialization.IntermediateInitialization.<init>()	6	X	X	X	X	X	X	95
(67)initialization.StaticInit.staticInit()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(68)initialization.IntermediateInitialization.instantiateChild1()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(68)initialization.IntermediateInitialization.instantiateChild1()->(86)helper.Child1.<init>()	6	X	X	X	X	X	X	95
(69)initialization.Init.<init>(helper.Interface)->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(69)initialization.Init.<init>(helper.Interface)->(68)initialization.IntermediateInitialization.instantiateChild1()	5	X		X	X	X	X	93
(69)initialization.Init.<init>(helper.Interface)->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(69)initialization.Init.<init>(helper.Interface)->(86)helper.Child1.<init>()	6	X	X	X	X	X	X	95
(69)initialization.Init.<init>(helper.Interface)->(118)helper.Child2.<init>()	6	X	X	X	X	X	X	95
(69)initialization.Init.<init>(helper.Interface)->(139)initialization.IntermediateInitialization.<init>()	5	X		X	X	X	X	93
(70)initialization.Constructor.<init>()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(70)initialization.Constructor.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(71)initialization.InitializationTest.test()->(3)helper.Debug.debug(java.lang.String)	6	X	X	X	X	X	X	95
(71)initialization.InitializationTest.test()->(67)initialization.StaticInit.staticInit()	6	X	X	X	X	X	X	95
(71)initialization.InitializationTest.test()->(69)initialization.Init.<init>(helper.Interface)	6	X	X	X	X	X	X	95
(71)initialization.InitializationTest.test()->(70)initialization.Constructor.<init>()	6	X	X	X	X	X	X	95
(71)initialization.InitializationTest.test()->(86)helper.Child1.<init>()	6	X	X	X	X	X	X	95
(72)dynamic.DynamicTest.main(java.lang.String[])->(73)dynamic.DynamicTest.<init>()	6	X	X	X	X	X	X	95
(72)dynamic.DynamicTest.main(java.lang.String[])->(74)dynamic.DynamicTest.test()	6	X	X	X	X	X	X	95
(73)dynamic.DynamicTest.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(74)dynamic.DynamicTest.test()->(0)dynamic.DynamicTest.reflection()	6	X	X	X	X	X	X	95
(74)dynamic.DynamicTest.test()->(7)dynamic.DynamicTest.methodHandle()	6	X	X	X	X	X	X	95
(83)java8.Java8Test.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(84)java8.MethodReference.doSomething()->(156)java.util.function.Consumer.accept()	1				X			8
(84)java8.MethodReference.doSomething()->(157)java.util.List.forEach(java.util.function.Consumer)	1				X			8
(84)java8.MethodReference.doSomething()->(165)java.lang.Object.accept()	1				X			8
(85)java8.Java8Test.main(java.lang.String[])->(16)java8.Java8Test.test()	6	X	X	X	X	X	X	95
(85)java8.Java8Test.main(java.lang.String[])->(83)java8.Java8Test.<init>()	6	X	X	X	X	X	X	95
(86)helper.Child1.<init>()->(129)helper.Abstract.<init>()	5	X	X	X	X	X		31
(108).CallGraphTest.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(109).CallGraphTest.main(java.lang.String[])->(16)java8.Java8Test.test()	6	X	X	X	X	X	X	95
(109).CallGraphTest.main(java.lang.String[])->(25)generics.GenericsTest.test()	6	X	X	X	X	X	X	95
(109).CallGraphTest.main(java.lang.String[])->(29)parser.ParserTest.test()	6	X	X	X	X	X	X	95
(109).CallGraphTest.main(java.lang.String[])->(62)polimorph.PolimorphTest.test()	6	X	X	X	X	X	X	95
(109).CallGraphTest.main(java.lang.String[])->(71)initialization.InitializationTest.test()	6	X	X	X	X	X	X	95
(109).CallGraphTest.main(java.lang.String[])->(73)dynamic.DynamicTest.<init>()	6	X	X	X	X	X	X	95
(109).CallGraphTest.main(java.lang.String[])->(74)dynamic.DynamicTest.test()	6	X	X	X	X	X	X	95
(109).CallGraphTest.main(java.lang.String[])->(83)java8.Java8Test.<init>()	6	X	X	X	X	X	X	95
(109).CallGraphTest.main(java.lang.String[])->(110)parser.ParserTest.<init>()	6	X	X	X	X	X	X	95
(109).CallGraphTest.main(java.lang.String[])->(111)anonymAndInner.AnonymAndInnerTest.<init>()	6	X	X	X	X	X	X	95
(109).CallGraphTest.main(java.lang.String[])->(112)anonymAndInner.AnonymAndInnerTest.test()	6	X	X	X	X	X	X	95
(109).CallGraphTest.main(java.lang.String[])->(113)initialization.InitializationTest.<init>()	6	X	X	X	X	X	X	95
(109).CallGraphTest.main(java.lang.String[])->(114)generics.GenericsTest.<init>()	6	X	X	X	X	X	X	95
(109).CallGraphTest.main(java.lang.String[])->(115)polimorph.PolimorphTest.<init>()	6	X	X	X	X	X	X	95
(110)parser.ParserTest.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(111)anonymAndInner.AnonymAndInnerTest.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(112)anonymAndInner.AnonymAndInnerTest.test()->(39)anonymAndInner.AnonymAndInnerTest.innerClass()	6	X	X	X	X	X	X	95
(112)anonymAndInner.AnonymAndInnerTest.test()->(40)anonymAndInner.AnonymAndInnerTest.anonim()	6	X	X	X	X	X	X	95
(112)anonymAndInner.AnonymAndInnerTest.test()->(41)anonymAndInner.AnonymAndInnerTest.nested()	6	X	X	X	X	X	X	95
(113)initialization.InitializationTest.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(114)generics.GenericsTest.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(115)polimorph.PolimorphTest.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(116)generics.Generic1.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(117)anonymAndInner.AnonymAndInnerTest$2.generic(helper.Interface)->(42)anonymAndInner.AnonymAndInnerTest$2.generic(helper.Child1)	3	X			X	X		25
(118)helper.Child2.<init>()->(129)helper.Abstract.<init>()	5	X	X	X	X	X		31
(119)generics.Generic2.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(120)generics.Generic3.<init>()->(116)generics.Generic1.<init>()	5	X	X	X	X	X		31
(121)generics.GenericsTest.main(java.lang.String[])->(25)generics.GenericsTest.test()	6	X	X	X	X	X	X	95
(121)generics.GenericsTest.main(java.lang.String[])->(114)generics.GenericsTest.<init>()	6	X	X	X	X	X	X	95
(122)parser.ForParser.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(123)parser.ParserTest.main(java.lang.String[])->(29)parser.ParserTest.test()	6	X	X	X	X	X	X	95
(123)parser.ParserTest.main(java.lang.String[])->(110)parser.ParserTest.<init>()	6	X	X	X	X	X	X	95
(124)anonymAndInner.Outer.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(125)anonymAndInner.Outer$Inner.<init>(anonymAndInner.Outer)->(75)java.lang.Object.<init>()	3	X			X	X		25
(126)anonymAndInner.AnonymAndInnerTest$1.<init>(anonymAndInner.AnonymAndInnerTest)->(86)helper.Child1.<init>()	3	X			X	X		25
(126)anonymAndInner.AnonymAndInnerTest$1.<init>(anonymAndInner.AnonymAndInnerTest)->(116)generics.Generic1.<init>()	3	X			X	X		25
(127)anonymAndInner.Outer$Nested.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(128)anonymAndInner.AnonymAndInnerTest.main(java.lang.String[])->(111)anonymAndInner.AnonymAndInnerTest.<init>()	6	X	X	X	X	X	X	95
(128)anonymAndInner.AnonymAndInnerTest.main(java.lang.String[])->(112)anonymAndInner.AnonymAndInnerTest.test()	6	X	X	X	X	X	X	95
(129)helper.Abstract.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(130)helper.Child3.<init>()->(118)helper.Child2.<init>()	5	X	X	X	X	X		31
(131)helper.Debug.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(132)helper.Base.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(133)polimorph.Overload.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(134)polimorph.Polimorph.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(135)polimorph.Polimorph.interfaceImplementation()->(45)helper.Interface.hoo()	5		X	X	X	X	X	94
(135)polimorph.Polimorph.interfaceImplementation()->(86)helper.Child1.<init>()	6	X	X	X	X	X	X	95
(135)polimorph.Polimorph.interfaceImplementation()->(147)helper.Interface.foo()	4		X	X	X		X	78
(135)polimorph.Polimorph.interfaceImplementation()->(148)helper.Interface.goo()	4		X	X	X		X	78
(136)polimorph.Polimorph.interfaceImplementation2()->(45)helper.Interface.hoo()	4		X	X	X		X	78
(136)polimorph.Polimorph.interfaceImplementation2()->(118)helper.Child2.<init>()	6	X	X	X	X	X	X	95
(136)polimorph.Polimorph.interfaceImplementation2()->(147)helper.Interface.foo()	4		X	X	X		X	78
(137)polimorph.Polimorph.abstractClassImplementation()->(47)helper.Abstract.foo()	4		X	X	X		X	78
(137)polimorph.Polimorph.abstractClassImplementation()->(49)helper.Child1.foo()	6	X	X	X	X	X	X	95
(137)polimorph.Polimorph.abstractClassImplementation()->(86)helper.Child1.<init>()	6	X	X	X	X	X	X	95
(138)polimorph.PolimorphTest.main(java.lang.String[])->(62)polimorph.PolimorphTest.test()	6	X	X	X	X	X	X	95
(138)polimorph.PolimorphTest.main(java.lang.String[])->(115)polimorph.PolimorphTest.<init>()	6	X	X	X	X	X	X	95
(139)initialization.IntermediateInitialization.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(140)initialization.StaticInit.<init>()->(75)java.lang.Object.<init>()	5	X	X	X	X	X		31
(141)initialization.Constructor.callPrivate()->(142)initialization.Constructor.privateMethod()	6	X	X	X	X	X	X	95
(143)initialization.InitializationTest.main(java.lang.String[])->(71)initialization.InitializationTest.test()	6	X	X	X	X	X	X	95
(143)initialization.InitializationTest.main(java.lang.String[])->(113)initialization.InitializationTest.<init>()	6	X	X	X	X	X	X	95
(0)dynamic.DynamicTest.reflection()->(1)helper.Debug.<clinit>()	1	X						1
(0)dynamic.DynamicTest.reflection()->(4)java.lang.Object.<clinit>()	1	X						1
(0)dynamic.DynamicTest.reflection()->(5)java.lang.System.<clinit>()	1	X						1
(0)dynamic.DynamicTest.reflection()->(6)java.lang.Class.<clinit>()	1	X						1
(0)dynamic.DynamicTest.reflection()->(77)java.lang.reflect.AccessibleObject.setAccessible(boolean)	5	X	X	X		X	X	87
(1)helper.Debug.<clinit>()->(1)helper.Debug.<clinit>()	1	X						1
(1)helper.Debug.<clinit>()->(4)java.lang.Object.<clinit>()	1	X						1
(3)helper.Debug.debug(java.lang.String)->(1)helper.Debug.<clinit>()	1	X						1
(3)helper.Debug.debug(java.lang.String)->(4)java.lang.Object.<clinit>()	1	X						1
(3)helper.Debug.debug(java.lang.String)->(5)java.lang.System.<clinit>()	1	X						1
(7)dynamic.DynamicTest.methodHandle()->(1)helper.Debug.<clinit>()	1	X						1
(7)dynamic.DynamicTest.methodHandle()->(4)java.lang.Object.<clinit>()	1	X						1
(7)dynamic.DynamicTest.methodHandle()->(5)java.lang.System.<clinit>()	1	X						1
(7)dynamic.DynamicTest.methodHandle()->(10)java.lang.invoke.MethodHandles.<clinit>()	1	X						1
(7)dynamic.DynamicTest.methodHandle()->(11)java.lang.invoke.MethodType.<clinit>()	1	X						1
(12)java8.Java8Test.lambda()->(1)helper.Debug.<clinit>()	1	X						1
(12)java8.Java8Test.lambda()->(4)java.lang.Object.<clinit>()	1	X						1
(13)java8.Java8Test.methodReference()->(1)helper.Debug.<clinit>()	1	X						1
(13)java8.Java8Test.methodReference()->(4)java.lang.Object.<clinit>()	1	X						1
(14)java8.Java8Test.functionalInterface()->(1)helper.Debug.<clinit>()	1	X						1
(14)java8.Java8Test.functionalInterface()->(4)java.lang.Object.<clinit>()	1	X						1
(15)java8.Java8Test.functionalInterface2()->(1)helper.Debug.<clinit>()	1	X						1
(15)java8.Java8Test.functionalInterface2()->(4)java.lang.Object.<clinit>()	1	X						1
(16)java8.Java8Test.test()->(1)helper.Debug.<clinit>()	1	X						1
(16)java8.Java8Test.test()->(4)java.lang.Object.<clinit>()	1	X						1
(17)java8.Java8Test.lambda$0(int,int)->(1)helper.Debug.<clinit>()	1	X						1
(17)java8.Java8Test.lambda$0(int,int)->(4)java.lang.Object.<clinit>()	1	X						1
(18)java8.Java8Test.lambda$3(java.lang.String)->(4)java.lang.Object.<clinit>()	1	X						1
(18)java8.Java8Test.lambda$3(java.lang.String)->(5)java.lang.System.<clinit>()	1	X						1
(18)java8.Java8Test.lambda$3(java.lang.String)->(19)java.lang.String.<clinit>()	1	X						1
(20)java8.MethodReference.print(java.lang.String)->(1)helper.Debug.<clinit>()	1	X						1
(20)java8.MethodReference.print(java.lang.String)->(4)java.lang.Object.<clinit>()	1	X						1
(21)java8.MethodReference.privatePrint()->(1)helper.Debug.<clinit>()	1	X						1
(21)java8.MethodReference.privatePrint()->(4)java.lang.Object.<clinit>()	1	X						1
(22)java8.MethodReference.<init>()->(4)java.lang.Object.<clinit>()	1	X						1
(22)java8.MethodReference.<init>()->(23)java.util.ArrayList.<clinit>()	1	X						1
(22)java8.MethodReference.<init>()->(90)java.util.Collections$CheckedCollection.add(java.lang.Object)	1	X						1
(22)java8.MethodReference.<init>()->(91)java.util.concurrent.CopyOnWriteArrayList.add(java.lang.Object)	1	X						1
(22)java8.MethodReference.<init>()->(92)java.util.Vector.add(java.lang.Object)	1	X						1
(22)java8.MethodReference.<init>()->(93)java.util.Collections$UnmodifiableCollection.add(java.lang.Object)	1	X						1
(22)java8.MethodReference.<init>()->(94)java.util.LinkedList.add(java.lang.Object)	1	X						1
(22)java8.MethodReference.<init>()->(95)java.util.Collections$SynchronizedCollection.add(java.lang.Object)	1	X						1
(22)java8.MethodReference.<init>()->(96)java.util.ArrayList.add(java.lang.Object)	2	X				X		17
(22)java8.MethodReference.<init>()->(97)java.util.AbstractList.add(java.lang.Object)	1	X						1
(24)generics.GenericsTest.genericMethod(helper.Interface)->(1)helper.Debug.<clinit>()	1	X						1
(24)generics.GenericsTest.genericMethod(helper.Interface)->(4)java.lang.Object.<clinit>()	1	X						1
(24)generics.GenericsTest.genericMethod(helper.Interface)->(35)anonymAndInner.AnonymAndInnerTest$1.foo()	1	X						1
(24)generics.GenericsTest.genericMethod(helper.Interface)->(47)helper.Abstract.foo()	2	X				X		17
(24)generics.GenericsTest.genericMethod(helper.Interface)->(49)helper.Child1.foo()	1	X						1
(25)generics.GenericsTest.test()->(1)helper.Debug.<clinit>()	1	X						1
(25)generics.GenericsTest.test()->(4)java.lang.Object.<clinit>()	1	X						1
(25)generics.GenericsTest.test()->(117)anonymAndInner.AnonymAndInnerTest$2.generic(helper.Interface)	1	X						1
(26)generics.Generic1.generic(helper.Interface)->(1)helper.Debug.<clinit>()	1	X						1
(26)generics.Generic1.generic(helper.Interface)->(4)java.lang.Object.<clinit>()	1	X						1
(26)generics.Generic1.generic(helper.Interface)->(35)anonymAndInner.AnonymAndInnerTest$1.foo()	1	X						1
(26)generics.Generic1.generic(helper.Interface)->(47)helper.Abstract.foo()	2	X				X		17
(26)generics.Generic1.generic(helper.Interface)->(49)helper.Child1.foo()	2	X				X		17
(27)generics.Generic2.generic(helper.Interface,generics.Generic1)->(1)helper.Debug.<clinit>()	1	X						1
(27)generics.Generic2.generic(helper.Interface,generics.Generic1)->(4)java.lang.Object.<clinit>()	1	X						1
(27)generics.Generic2.generic(helper.Interface,generics.Generic1)->(35)anonymAndInner.AnonymAndInnerTest$1.foo()	1	X						1
(27)generics.Generic2.generic(helper.Interface,generics.Generic1)->(47)helper.Abstract.foo()	2	X				X		17
(27)generics.Generic2.generic(helper.Interface,generics.Generic1)->(49)helper.Child1.foo()	1	X						1
(27)generics.Generic2.generic(helper.Interface,generics.Generic1)->(117)anonymAndInner.AnonymAndInnerTest$2.generic(helper.Interface)	1	X						1
(28)generics.Generic3.foo()->(1)helper.Debug.<clinit>()	1	X						1
(28)generics.Generic3.foo()->(4)java.lang.Object.<clinit>()	1	X						1
(28)generics.Generic3.foo()->(26)generics.Generic1.generic(helper.Interface)	4	X	X	X		X		23
(29)parser.ParserTest.test()->(1)helper.Debug.<clinit>()	1	X						1
(29)parser.ParserTest.test()->(4)java.lang.Object.<clinit>()	1	X						1
(29)parser.ParserTest.test()->(6)java.lang.Class.<clinit>()	1	X						1
(30)parser.ForParser.foo()->(1)helper.Debug.<clinit>()	1	X						1
(30)parser.ForParser.foo()->(4)java.lang.Object.<clinit>()	1	X						1
(31)parser.ForParser.goo()->(1)helper.Debug.<clinit>()	1	X						1
(31)parser.ForParser.goo()->(4)java.lang.Object.<clinit>()	1	X						1
(32)parser.ForParser.validMethod(helper.Child2,generics.Generic1,java.lang.Class[])->(1)helper.Debug.<clinit>()	1	X						1
(32)parser.ForParser.validMethod(helper.Child2,generics.Generic1,java.lang.Class[])->(4)java.lang.Object.<clinit>()	1	X						1
(33)parser.ForParser.validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[])->(1)helper.Debug.<clinit>()	1	X						1
(33)parser.ForParser.validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[])->(4)java.lang.Object.<clinit>()	1	X						1
(34)anonymAndInner.Outer.inner()->(1)helper.Debug.<clinit>()	1	X						1
(34)anonymAndInner.Outer.inner()->(4)java.lang.Object.<clinit>()	1	X						1
(35)anonymAndInner.AnonymAndInnerTest$1.foo()->(1)helper.Debug.<clinit>()	1	X						1
(35)anonymAndInner.AnonymAndInnerTest$1.foo()->(4)java.lang.Object.<clinit>()	1	X						1
(36)anonymAndInner.Outer$Nested.staticNested()->(1)helper.Debug.<clinit>()	1	X						1
(36)anonymAndInner.Outer$Nested.staticNested()->(4)java.lang.Object.<clinit>()	1	X						1
(37)anonymAndInner.Outer$Nested.nested()->(1)helper.Debug.<clinit>()	1	X						1
(37)anonymAndInner.Outer$Nested.nested()->(4)java.lang.Object.<clinit>()	1	X						1
(38)anonymAndInner.Outer$Inner.inner()->(1)helper.Debug.<clinit>()	1	X						1
(38)anonymAndInner.Outer$Inner.inner()->(4)java.lang.Object.<clinit>()	1	X						1
(39)anonymAndInner.AnonymAndInnerTest.innerClass()->(1)helper.Debug.<clinit>()	1	X						1
(39)anonymAndInner.AnonymAndInnerTest.innerClass()->(4)java.lang.Object.<clinit>()	1	X						1
(40)anonymAndInner.AnonymAndInnerTest.anonim()->(1)helper.Debug.<clinit>()	1	X						1
(40)anonymAndInner.AnonymAndInnerTest.anonim()->(4)java.lang.Object.<clinit>()	1	X						1
(40)anonymAndInner.AnonymAndInnerTest.anonim()->(35)anonymAndInner.AnonymAndInnerTest$1.foo()	2	X				X		17
(40)anonymAndInner.AnonymAndInnerTest.anonim()->(117)anonymAndInner.AnonymAndInnerTest$2.generic(helper.Interface)	2	X				X		17
(41)anonymAndInner.AnonymAndInnerTest.nested()->(1)helper.Debug.<clinit>()	1	X						1
(41)anonymAndInner.AnonymAndInnerTest.nested()->(4)java.lang.Object.<clinit>()	1	X						1
(42)anonymAndInner.AnonymAndInnerTest$2.generic(helper.Child1)->(1)helper.Debug.<clinit>()	1	X						1
(42)anonymAndInner.AnonymAndInnerTest$2.generic(helper.Child1)->(4)java.lang.Object.<clinit>()	1	X						1
(42)anonymAndInner.AnonymAndInnerTest$2.generic(helper.Child1)->(35)anonymAndInner.AnonymAndInnerTest$1.foo()	2	X				X		17
(43)helper.Child2.goo()->(1)helper.Debug.<clinit>()	1	X						1
(43)helper.Child2.goo()->(4)java.lang.Object.<clinit>()	1	X						1
(44)helper.Child2.hoo()->(1)helper.Debug.<clinit>()	1	X						1
(44)helper.Child2.hoo()->(4)java.lang.Object.<clinit>()	1	X						1
(45)helper.Interface.hoo()->(1)helper.Debug.<clinit>()	1	X						1
(45)helper.Interface.hoo()->(4)java.lang.Object.<clinit>()	1	X						1
(46)helper.Child3.hoo()->(1)helper.Debug.<clinit>()	1	X						1
(46)helper.Child3.hoo()->(4)java.lang.Object.<clinit>()	1	X						1
(47)helper.Abstract.foo()->(1)helper.Debug.<clinit>()	1	X						1
(47)helper.Abstract.foo()->(4)java.lang.Object.<clinit>()	1	X						1
(48)helper.Child1.goo()->(1)helper.Debug.<clinit>()	1	X						1
(48)helper.Child1.goo()->(4)java.lang.Object.<clinit>()	1	X						1
(49)helper.Child1.foo()->(1)helper.Debug.<clinit>()	1	X						1
(49)helper.Child1.foo()->(4)java.lang.Object.<clinit>()	1	X						1
(50)helper.Child1.child1()->(1)helper.Debug.<clinit>()	1	X						1
(50)helper.Child1.child1()->(4)java.lang.Object.<clinit>()	1	X						1
(51)helper.Base.base()->(1)helper.Debug.<clinit>()	1	X						1
(51)helper.Base.base()->(4)java.lang.Object.<clinit>()	1	X						1
(52)polimorph.Overload.foo()->(1)helper.Debug.<clinit>()	1	X						1
(52)polimorph.Overload.foo()->(4)java.lang.Object.<clinit>()	1	X						1
(53)polimorph.Overload.foo(int)->(1)helper.Debug.<clinit>()	1	X						1
(53)polimorph.Overload.foo(int)->(4)java.lang.Object.<clinit>()	1	X						1
(54)polimorph.Overload.foo(java.lang.Object)->(1)helper.Debug.<clinit>()	1	X						1
(54)polimorph.Overload.foo(java.lang.Object)->(4)java.lang.Object.<clinit>()	1	X						1
(55)polimorph.Overload.foo(int,java.lang.Object[])->(1)helper.Debug.<clinit>()	1	X						1
(55)polimorph.Overload.foo(int,java.lang.Object[])->(4)java.lang.Object.<clinit>()	1	X						1
(56)polimorph.Overload.overload1()->(1)helper.Debug.<clinit>()	1	X						1
(56)polimorph.Overload.overload1()->(4)java.lang.Object.<clinit>()	1	X						1
(57)polimorph.Overload.overload2()->(1)helper.Debug.<clinit>()	1	X						1
(57)polimorph.Overload.overload2()->(4)java.lang.Object.<clinit>()	1	X						1
(58)polimorph.Overload.overload3()->(1)helper.Debug.<clinit>()	1	X						1
(58)polimorph.Overload.overload3()->(4)java.lang.Object.<clinit>()	1	X						1
(59)polimorph.Overload.overload4()->(1)helper.Debug.<clinit>()	1	X						1
(59)polimorph.Overload.overload4()->(4)java.lang.Object.<clinit>()	1	X						1
(60)polimorph.PolimorphTest.overload()->(1)helper.Debug.<clinit>()	1	X						1
(60)polimorph.PolimorphTest.overload()->(4)java.lang.Object.<clinit>()	1	X						1
(61)polimorph.PolimorphTest.polimorphic()->(1)helper.Debug.<clinit>()	1	X						1
(61)polimorph.PolimorphTest.polimorphic()->(4)java.lang.Object.<clinit>()	1	X						1
(62)polimorph.PolimorphTest.test()->(1)helper.Debug.<clinit>()	1	X						1
(62)polimorph.PolimorphTest.test()->(4)java.lang.Object.<clinit>()	1	X						1
(63)polimorph.Polimorph.overloadedInterface(helper.Interface)->(1)helper.Debug.<clinit>()	1	X						1
(63)polimorph.Polimorph.overloadedInterface(helper.Interface)->(4)java.lang.Object.<clinit>()	1	X						1
(63)polimorph.Polimorph.overloadedInterface(helper.Interface)->(35)anonymAndInner.AnonymAndInnerTest$1.foo()	1	X						1
(63)polimorph.Polimorph.overloadedInterface(helper.Interface)->(43)helper.Child2.goo()	2	X				X		17
(63)polimorph.Polimorph.overloadedInterface(helper.Interface)->(44)helper.Child2.hoo()	1	X						1
(63)polimorph.Polimorph.overloadedInterface(helper.Interface)->(46)helper.Child3.hoo()	2	X				X		17
(63)polimorph.Polimorph.overloadedInterface(helper.Interface)->(47)helper.Abstract.foo()	2	X				X		17
(63)polimorph.Polimorph.overloadedInterface(helper.Interface)->(48)helper.Child1.goo()	1	X						1
(63)polimorph.Polimorph.overloadedInterface(helper.Interface)->(49)helper.Child1.foo()	1	X						1
(64)polimorph.Polimorph.overloadedInterface()->(1)helper.Debug.<clinit>()	1	X						1
(64)polimorph.Polimorph.overloadedInterface()->(4)java.lang.Object.<clinit>()	1	X						1
(64)polimorph.Polimorph.overloadedInterface()->(43)helper.Child2.goo()	5	X	X	X		X	X	87
(64)polimorph.Polimorph.overloadedInterface()->(47)helper.Abstract.foo()	5	X	X	X		X	X	87
(65)polimorph.Polimorph.overloadedInterface2()->(1)helper.Debug.<clinit>()	1	X						1
(65)polimorph.Polimorph.overloadedInterface2()->(4)java.lang.Object.<clinit>()	1	X						1
(65)polimorph.Polimorph.overloadedInterface2()->(46)helper.Child3.hoo()	1	X						1
(65)polimorph.Polimorph.overloadedInterface2()->(47)helper.Abstract.foo()	5	X	X	X		X	X	87
(66)initialization.StaticInit.<clinit>()->(1)helper.Debug.<clinit>()	1	X						1
(66)initialization.StaticInit.<clinit>()->(4)java.lang.Object.<clinit>()	1	X						1
(66)initialization.StaticInit.<clinit>()->(66)initialization.StaticInit.<clinit>()	1	X						1
(67)initialization.StaticInit.staticInit()->(1)helper.Debug.<clinit>()	1	X						1
(67)initialization.StaticInit.staticInit()->(4)java.lang.Object.<clinit>()	1	X						1
(68)initialization.IntermediateInitialization.instantiateChild1()->(1)helper.Debug.<clinit>()	1	X						1
(68)initialization.IntermediateInitialization.instantiateChild1()->(4)java.lang.Object.<clinit>()	1	X						1
(69)initialization.Init.<init>(helper.Interface)->(1)helper.Debug.<clinit>()	1	X						1
(69)initialization.Init.<init>(helper.Interface)->(4)java.lang.Object.<clinit>()	1	X						1
(70)initialization.Constructor.<init>()->(1)helper.Debug.<clinit>()	1	X						1
(70)initialization.Constructor.<init>()->(4)java.lang.Object.<clinit>()	1	X						1
(71)initialization.InitializationTest.test()->(1)helper.Debug.<clinit>()	1	X						1
(71)initialization.InitializationTest.test()->(4)java.lang.Object.<clinit>()	1	X						1
(71)initialization.InitializationTest.test()->(66)initialization.StaticInit.<clinit>()	1	X						1
(84)java8.MethodReference.doSomething()->(98)java.util.Vector.forEach(java.util.function.Consumer)	1	X						1
(84)java8.MethodReference.doSomething()->(99)java.util.Collections$SynchronizedCollection.forEach(java.util.function.Consumer)	1	X						1
(84)java8.MethodReference.doSomething()->(100)java.util.Collections$CheckedCollection.forEach(java.util.function.Consumer)	1	X						1
(84)java8.MethodReference.doSomething()->(101)java.util.ArrayList.forEach(java.util.function.Consumer)	2	X				X		17
(84)java8.MethodReference.doSomething()->(102)java.util.Collections$UnmodifiableCollection.forEach(java.util.function.Consumer)	1	X						1
(84)java8.MethodReference.doSomething()->(103)java.util.Collections$SingletonList.forEach(java.util.function.Consumer)	1	X						1
(84)java8.MethodReference.doSomething()->(104)java.util.concurrent.CopyOnWriteArrayList$COWSubList.forEach(java.util.function.Consumer)	1	X						1
(84)java8.MethodReference.doSomething()->(105)java.util.Collections$EmptyList.forEach(java.util.function.Consumer)	1	X						1
(84)java8.MethodReference.doSomething()->(106)java.util.Arrays$ArrayList.forEach(java.util.function.Consumer)	1	X						1
(84)java8.MethodReference.doSomething()->(107)java.util.concurrent.CopyOnWriteArrayList.forEach(java.util.function.Consumer)	1	X						1
(135)polimorph.Polimorph.interfaceImplementation()->(35)anonymAndInner.AnonymAndInnerTest$1.foo()	1	X						1
(135)polimorph.Polimorph.interfaceImplementation()->(48)helper.Child1.goo()	2	X				X		17
(135)polimorph.Polimorph.interfaceImplementation()->(49)helper.Child1.foo()	2	X				X		17
(136)polimorph.Polimorph.interfaceImplementation2()->(44)helper.Child2.hoo()	2	X				X		17
(136)polimorph.Polimorph.interfaceImplementation2()->(46)helper.Child3.hoo()	1	X						1
(136)polimorph.Polimorph.interfaceImplementation2()->(47)helper.Abstract.foo()	2	X				X		17
(137)polimorph.Polimorph.abstractClassImplementation()->(35)anonymAndInner.AnonymAndInnerTest$1.foo()	1	X						1
(34)anonymAndInner.Outer.inner()->(146)anonymAndInner.Outer$Inner.<init>()	3		X	X			X	70
(40)anonymAndInner.AnonymAndInnerTest.anonim()->(144)anonymAndInner.AnonymAndInnerTest$1.<init>()	3		X	X			X	70
(40)anonymAndInner.AnonymAndInnerTest.anonim()->(145)anonymAndInner.AnonymAndInnerTest$2.<init>()	3		X	X			X	70
(84)java8.MethodReference.doSomething()->(152)java.lang.Iterable.forEach(java.util.function.Consumer)	3		X	X			X	70
(144)anonymAndInner.AnonymAndInnerTest$1.<init>()->(86)helper.Child1.<init>()	2		X	X				6
(145)anonymAndInner.AnonymAndInnerTest$2.<init>()->(116)generics.Generic1.<init>()	2		X	X				6
(146)anonymAndInner.Outer$Inner.<init>()->(75)java.lang.Object.<init>()	2		X	X				6
(15)java8.Java8Test.functionalInterface2()->(79)java.io.PrintStream.println(java.lang.String)	2			X			X	68
(15)java8.Java8Test.functionalInterface2()->(86)helper.Child1.<init>()	2			X			X	68
(15)java8.Java8Test.functionalInterface2()->(87)java.lang.String.<init>(java.lang.String)	2			X			X	68
(15)java8.Java8Test.functionalInterface2()->(88)java.lang.String.toLowerCase()	2			X			X	68
(22)java8.MethodReference.<init>()->(22)java8.MethodReference.<init>()	1			X				4
(69)initialization.Init.<init>(helper.Interface)->(69)initialization.Init.<init>(helper.Interface)	2			X			X	68
(12)java8.Java8Test.lambda()->(167)java.lang.invoke.LambdaMetafactory.compare$java8$Java8Test$0()	1					X		16
(12)java8.Java8Test.lambda()->(170)wala.lambda$java8$Java8Test$0.compare(int,int)	1					X		16
(14)java8.Java8Test.functionalInterface()->(168)java.lang.invoke.LambdaMetafactory.doSomething$java8$Java8Test$1()	1					X		16
(14)java8.Java8Test.functionalInterface()->(171)wala.lambda$java8$Java8Test$1.doSomething(java.lang.String)	1					X		16
(15)java8.Java8Test.functionalInterface2()->(168)java.lang.invoke.LambdaMetafactory.doSomething$java8$Java8Test$1()	1					X		16
(15)java8.Java8Test.functionalInterface2()->(169)java.lang.invoke.LambdaMetafactory.doSomething$java8$Java8Test$2()	1					X		16
(15)java8.Java8Test.functionalInterface2()->(171)wala.lambda$java8$Java8Test$1.doSomething(java.lang.String)	1					X		16
(15)java8.Java8Test.functionalInterface2()->(172)wala.lambda$java8$Java8Test$2.doSomething(java.lang.String)	1					X		16
(84)java8.MethodReference.doSomething()->(166)java.lang.invoke.LambdaMetafactory.accept$java8$MethodReference$0()	1					X		16
(171)wala.lambda$java8$Java8Test$1.doSomething(java.lang.String)->(20)java8.MethodReference.print(java.lang.String)	1					X		16
(172)wala.lambda$java8$Java8Test$2.doSomething(java.lang.String)->(18)java8.Java8Test.lambda$3(java.lang.String)	1					X		16
(173)wala.lambda$java8$MethodReference$0.accept(java.lang.Object)->(20)java8.MethodReference.print(java.lang.String)	1					X		16
(25)generics.GenericsTest.test()->(174)generics.Generic1.generic(helper.Child1)	1						X	64
(25)generics.GenericsTest.test()->(175)generics.Generic1.generic(helper.Child2)	1						X	64
(25)generics.GenericsTest.test()->(176)generics.Generic2.generic(helper.Child2,generics.Generic1)	1						X	64
(25)generics.GenericsTest.test()->(177)generics.GenericsTest.genericMethod(helper.Child2)	1						X	64
(28)generics.Generic3.foo()->(174)generics.Generic1.generic(helper.Child1)	1						X	64
(29)parser.ParserTest.test()->(176)generics.Generic2.generic(helper.Child2,generics.Generic1)	1						X	64
(32)parser.ForParser.validMethod(helper.Child2,generics.Generic1,java.lang.Class[])->(176)generics.Generic2.generic(helper.Child2,generics.Generic1)	1						X	64
(33)parser.ForParser.validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[])->(176)generics.Generic2.generic(helper.Child2,generics.Generic1)	1						X	64
(40)anonymAndInner.AnonymAndInnerTest.anonim()->(174)generics.Generic1.generic(helper.Child1)	1						X	64
(174)generics.Generic1.generic(helper.Child1)->(3)helper.Debug.debug(java.lang.String)	1						X	64
(174)generics.Generic1.generic(helper.Child1)->(147)helper.Interface.foo()	1						X	64
